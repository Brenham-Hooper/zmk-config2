/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define NUM_SYM 1
#define NAV     2

/ {
	behaviors {
		rst: boot_reset 
		{
			compatible = "zmk,behavior-hold-tap";
			label = "Bootloader Tap - Reset Hold";
			#binding-cells = <2>;
			tapping_term_ms = <200>;
            flavor = "balanced";
			bindings = <&reset>, <&bootloader>;
        };

        bh: layer_taps 
		{
			compatible = "zmk,behavior-hold-tap";
			label = "Layer-Tap";
			#binding-cells = <2>;
			tapping_term_ms = <215>;
            flavor = "tap-preferred";
			bindings = <&mo>, <&kp>;
        };

        hm: homerow_mods0 
		{
			compatible = "zmk,behavior-hold-tap";
			label = "homerow mods";
			#binding-cells = <2>;
			tapping_term_ms = <230>;
            flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
        };
        
        hm1: homerow_mods1 
		{
			compatible = "zmk,behavior-hold-tap";
			label = "homerow mods";
			#binding-cells = <2>;
			tapping_term_ms = <205>;
            flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
        };

        hm2: homerow_mods2 
		{
			compatible = "zmk,behavior-hold-tap";
			label = "homerow mods 2";
			#binding-cells = <2>;
			tapping_term_ms = <250>;
            flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
        };

        com_col: comma_semicolon
		{
		 	compatible = "zmk,behavior-hold-tap";
	     	label = "Tap comma_hold colon";
			#binding-cells = <2>;
			tapping_term_ms = <150>;
            flavor = "balanced";
		 	bindings = <&kp>, <&kp>;
	    };
   	 };
};

/ {
	combos {
		compatible = "zmk,combos";
		combo_backspce {
			timeout-ms = <10>;
			key-positions = <16 17>;
			bindings = <&kp BSPC>;
		};
		combo_gesc 
		{
			timeout-ms = <10>;
			key-positions = <0 1>;
			bindings = <&kp ESC>;
		};
		combo_tab 
		{
			timeout-ms = <10>;
			key-positions = <10 11>;
			bindings = <&kp TAB>;
		};
		combo_mnxt 
		{
			timeout-ms = <10>;
			key-positions = <18 19>;
			bindings = <&kp RETURN>;
		};
		combo_mprev 
		{
			timeout-ms = <10>;
			key-positions = <17 18>;
			bindings = <&mo NAV>;	
		};
		combo_mpp 
		{
			timeout-ms = <10>;
			key-positions = <27 29>;
			bindings = <&kp C_PP>;
		};
		combo_del 
		{
			timeout-ms = <10>;
			key-positions = <7 8 9>;
			bindings = <&kp DEL>;
		};
	};
};

&lt {
    retro-tap;
};

/ {
    keymap 
	{
    compatible = "zmk,keymap";

    default_layer {
            bindings = <
    &kp Q &kp W &kp F &kp P &kp B &kp J &kp L &kp U &kp Y &kp SQT
    &kp A &kp R &kp S &kp T &kp G &kp M &kp N &kp E &kp I &kp O
    &kp Z &kp X &kp C &kp D &kp V &kp K &kp H &kp COMMA &kp PERIOD &kp SLASH
    &kp LCTRL &kp LSHIFT &lt NUM_SYM SPACE &kp LWIN
            >;
        };

    num_sym {
            bindings = <
    &kp EXCL &kp AT &kp HASH &kp DOLLAR &kp PERCENT &kp CARET &kp AMPS &kp STAR &kp LPAR &kp RPAR
    &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0
    &kp BSLH &kp LBKT &kp RBKT &kp LBRC &kp RBRC &kp UNDER &kp MINUS &kp PLUS &kp EQUAL &kp SEMI
    &kp LCTRL &kp LSHIFT &trans &kp LWIN
            >;
        };

    nav {
            bindings = <
    &kp EXCL &kp PAGE_UP &kp UP &kp PAGE_DOWN &kp PERCENT &kp CARET &kp AMPS &kp STAR &kp LPAR &kp RPAR
    &kp N1 &kp LEFT &kp DOWN &kp RIGHT &kp GRAVE &kp N6 &kp N7 &kp N8 &kp N9 &kp N0
    &kp DEL &none &kp LBKT &kp LPAR &kp UNDER &none &kp RPAR &kp RBKT &kp DOT &kp BSLH
    &kp LCTRL &kp LSHIFT &kp SPACE &kp LWIN
            >;
        };
    };
};
